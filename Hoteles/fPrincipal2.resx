<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tableLayoutPanel1.SnapToGrid" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panelDatosHotel.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/7gAOQWRvYmUAZAAAAAAB/+EAFkV4aWYAAE1NACoAAAAIAAAAAAAA
        /+wAEUR1Y2t5AAEABAAAAGQAAP/hAzpodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvADw/eHBhY2tl
        dCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+DQo8eDp4bXBtZXRhIHht
        bG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJBZG9iZSBYTVAgQ29yZSA1LjAtYzA2MCA2MS4x
        MzQ3NzcsIDIwMTAvMDIvMTItMTc6MzI6MDAgICAgICAgICI+DQoJPHJkZjpSREYgeG1sbnM6cmRmPSJo
        dHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4NCgkJPHJkZjpEZXNjcmlw
        dGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4
        bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0
        dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9v
        bD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjg5
        NkI5RTY4RkY1NDExRTA5NUNBQTQxRjJBQzRFNDNBIiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOjg5
        NkI5RTY5RkY1NDExRTA5NUNBQTQxRjJBQzRFNDNBIj4NCgkJCTx4bXBNTTpEZXJpdmVkRnJvbSBzdFJl
        ZjppbnN0YW5jZUlEPSJ4bXAuaWlkOjg5NkI5RTY2RkY1NDExRTA5NUNBQTQxRjJBQzRFNDNBIiBzdFJl
        Zjpkb2N1bWVudElEPSJ4bXAuZGlkOjg5NkI5RTY3RkY1NDExRTA5NUNBQTQxRjJBQzRFNDNBIi8+DQoJ
        CTwvcmRmOkRlc2NyaXB0aW9uPg0KCTwvcmRmOlJERj4NCjwveDp4bXBtZXRhPg0KPD94cGFja2V0IGVu
        ZD0ndyc/Pv/bAEMAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQICAgIC
        AgICAgICAwMDAwMDAwMDA//bAEMBAQEBAQEBAgEBAgICAQICAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMD
        AwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA//AABEIAHAAcAMBEQACEQEDEQH/xAAZAAADAQEBAAAAAAAA
        AAAAAAABAgMABAr/xAAoEAEBAAMAAQQCAgICAwAAAAABAhESAyEAMSITQVEyI2FCcTOBUgT/xAAUAQEA
        AAAAAAAAAAAAAAAAAAAA/8QAFBEBAAAAAAAAAAAAAAAAAAAAAP/aAAwDAQACEQMRAD8A92T8Nm5v3tNi
        i16SRF/GOc0tba0CmfcfigxDTwXqM5qFNd9cXtgsqyvk58p+c14PQBFz1nq0kvUmi+mOTgPlfPbNSa6p
        YAvn0AnopZmYjTJNL1wPOhqXkN5xcZFaPy/sCNSmsl4brlU1NTX1bkU0Vzy8unTCnuZ8ImAWL2erNRus
        g1U6yGs1ddDM4Lia8ZKfx7noHa1yc4nBU5oqJmadDlV55s6BA7Ph/wBXFY9AWFEiJOqvErFBPybuypn7
        FC5Nnx74cIoKjRX+yNc9jjV1N4LAHrm1lpfcm8Y8egL9eI+QtwyY+xqYLu6w39vPPQjCnnPk9BucVV1c
        pW2QpSsOOk7fZLVFIriZwYwgHgB7TPx6MG1vNzEuVu/7aKDLGEn2H3y0egM/DljToYlon7Jbrbw3CuWq
        whX68ye/oATt15TcXXj4U3oeUWpg+VUSGapMpjPjHoMktRUzdEk63KV55S1y1meWrCVOc18WsKYcgc18
        pRpQZwfWZs50/OzrMEVU+MgoOHJkJN9JENeW1Tzqes9KzXOYtreIp2r2fEmv490B6lBOllL0nNeIzxfG
        CiSZrpDjW0PgZ/HoFoLUHEjM2+Zkpc9ZbEhh/wB3KyOcYz6B4JmVJL5rGfteRVy5+13c/wAbMn8Vx+xy
        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
</value>
  </data>
  <metadata name="lineShape3.Bounds" type="System.Drawing.Rectangle, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>0, 27, 359, 0</value>
  </metadata>
  <metadata name="lineShape3.Size" type="System.Drawing.Size, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>359, 0</value>
  </metadata>
  <metadata name="lineShape3.Location" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>0, 27</value>
  </metadata>
  <metadata name="lineShape2.Bounds" type="System.Drawing.Rectangle, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>0, 228, 359, 0</value>
  </metadata>
  <metadata name="lineShape2.Size" type="System.Drawing.Size, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>359, 0</value>
  </metadata>
  <metadata name="lineShape2.Location" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>0, 228</value>
  </metadata>
  <metadata name="lineShape1.Bounds" type="System.Drawing.Rectangle, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>0, 330, 356, 0</value>
  </metadata>
  <metadata name="lineShape1.Size" type="System.Drawing.Size, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>356, 0</value>
  </metadata>
  <metadata name="lineShape1.Location" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>0, 330</value>
  </metadata>
  <metadata name="hsaldt.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="tole.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="hsaldt2.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="tole2.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="tableLayoutPanel2.DrawGrid" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="timer_validarAlarmas.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>141, 18</value>
  </metadata>
  <metadata name="serialPort1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>27, 23</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>61</value>
  </metadata>
</root>